{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/./src/functions/functions.js","webpack://excel-custom-functions-js/webpack/runtime/define property getters","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/* global clearInterval, console, setInterval */\n\n/**\n * Add two numbers\n * @customfunction\n * @param {number} first First number\n * @param {number} second Second number\n * @returns {number} The sum of the two numbers.\n */\nexport function add(first, second) {\n  return first + second;\n}\n\n/**\n * Displays the current time once a second\n * @customfunction\n * @param {CustomFunctions.StreamingInvocation<string>} invocation Custom function invocation\n */\nexport function clock(invocation) {\n  const timer = setInterval(() => {\n    const time = currentTime();\n    invocation.setResult(time);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Returns the current time\n * @returns {string} String with the current time formatted for the current locale.\n */\nexport function currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\n/**\n * Increments a value once a second.\n * @customfunction\n * @param {number} incrementBy Amount to increment\n * @param {CustomFunctions.StreamingInvocation<number>} invocation\n */\nexport function increment(incrementBy, invocation) {\n  let result = 0;\n  const timer = setInterval(() => {\n    result += incrementBy;\n    invocation.setResult(result);\n  }, 1000 * 10);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Writes a message to console.log().\n * @customfunction LOG\n * @param {string} message String to write.\n * @returns String to write.\n */\nexport function logMessage(message) {\n  console.log(message);\n\n  return message;\n}\n\n// Write my own functions starting here\n\n/**\n * Return random int - 10\n * @customfunction\n * @returns {number} Return random int - 10.\n */\nfunction returnInt() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnInt.');\n  return Math.floor(Math.random() * 10);\n}\n\n/**\n * Return random int - 100\n * @customfunction\n * @returns {number} Return random int - 100.\n */\nfunction returnIntPromise() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnIntPromise.');\n  return new Promise(function (resolve) {\n      setTimeout(function () {\n          resolve(Math.floor(Math.random() * 100));\n      }, 1000);\n  });\n}\n\n/**\n * Return 42\n * @customfunction\n * @returns {number} Return 42.\n */\nfunction return42Promise() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call return42Promise.');\n  return new Promise(function (resolve) {\n      setTimeout(function () {\n          resolve(42);\n      }, 1000);\n  });\n}\n\n/**\n * Return random int - 1000\n * @customfunction\n * @volatile\n * @returns {number} Return random int - 1000.\n */\nfunction returnIntVolatile() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnIntVolatile.');\n  return Math.floor(Math.random() * 1000)\n}\n\n/**\n * Return 42\n * @customfunction\n * @volatile\n * @returns {number} Return 42.\n */\nfunction return42Volatile() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call return42Volatile.');\n  return 42;\n}\n\n/**\n * Return current time\n * @customfunction\n * @volatile\n * @returns {string} Return current time.\n */\nfunction returnStringVolatile() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnStringVolatile.');\n  return currentTime();\n}\n\n/**\n * Return current time\n * @customfunction\n * @param {CustomFunctions.StreamingInvocation<number>} invocation\n */\nexport function returnStringStream5m(invocation) {\n  let result = currentTime();\n  invocation.setResult(result);\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnStringStream5m#1.');\n  const timer = setInterval(() => {\n    //var timestamp = new Date().toISOString();\n    result = currentTime();\n    invocation.setResult(result);\n    console.log(`[${result}] `, 'Call returnStringStream5m#2.');\n  }, 1000 * 60 * 5);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Return current time\n * @customfunction\n * @param {CustomFunctions.StreamingInvocation<number>} invocation\n */\nexport function returnStringStream1s(invocation) {\n  let result = currentTime();\n  invocation.setResult(result);\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnStringStream1s#1.');\n  const timer = setInterval(() => {\n    //var timestamp = new Date().toISOString();\n    result = currentTime();\n    invocation.setResult(result);\n    console.log(`[${result}] `, 'Call returnStringStream1s#2.');\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Return current time\n * @customfunction\n * @param {CustomFunctions.StreamingInvocation<number>} invocation\n */\nexport function returnTestStringStream1s(invocation) {\n  invocation.setResult(123);\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnTestStringStream1s#1.');\n  const timer = setInterval(() => {\n    var timestamp = new Date().toISOString();\n    invocation.setResult(123);\n    console.log(`[${timestamp}] `, 'Call returnTestStringStream1s#2.');\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n\n/**\n * Return current time\n * @customfunction\n * @returns {string[][]} Return current time.\n */\nexport function returnStringDynamicArray() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnStringDynamicArray.');\n  return [[currentTime(), currentTime(), currentTime()]];\n}\n\n/**\n * Return test strings\n * @customfunction\n * @returns {string[][]} Return test strings.\n */\nexport function returnStringTestDynamicArray() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnStringTestDynamicArray.');\n  return [[\"1\", \"2\", \"3\"]];\n}\n\n/**\n * Return nested range\n * @customfunction\n * @param {string[][]} values Multiple ranges of values.\n * @returns {string} Return nested range.\n */\nexport function returnStringNested(range) {\n  var cell = range[0];\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnStringNested.');\n  return cell;\n}\n\n/**\n * Wait before returning current time\n * @customfunction\n * @returns {string} Return current time.\n */\nexport function returnStringWait() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}] `, 'Call returnStringWait.');\n  var num = 0;\n  for (var i = 0; i < 100000000000; i++) {\n    num++;\n  }\n  return timestamp;\n}\n\n/**\n * Wait before returning current time\n * @customfunction\n * @volatile\n * @returns {string} Return current time.\n */\nexport function returnStringWaitVolatile() {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}]`, 'Call returnStringWaitVolatile.');\n  var num = 0;\n  for (var i = 0; i < 100000000000; i++) {\n    num++;\n  }\n  return timestamp;\n}\n\n/**\n * Take a number as the input value and return a double as the output.\n * @customfunction\n * @returns A formatted number value.\n */\nfunction returnDoubleCellValue() {\n    return {\n        type: \"Double\",\n        basicValue: 10,\n        numberFormat: \"0.00%\"\n    }\n}\n\n/**\n * Input a string to output\n * @customfunction\n * @returns {string} Return input.\n */\nexport function inputString(str) {\n  var timestamp = new Date().toISOString();\n  console.log(`[${timestamp}]`, 'Call inputString.');\n  return str;\n}\n\n/**\n * @customfunction\n * @param {number} first\n * @param {number} second\n * @param {number} [third]\n * @returns {number}\n */\nfunction inputIntOptional(first, second, third) {\n  if (third === null) third = 0;\n  return first + second + third;\n}\n\n/**\n * @customfunction\n * @param {number[]} values\n * @returns {number}\n */\nfunction inputIntRepeating(values) {\n  const sum = values.reduce((a, b) => a + b, 0);\n  return sum / values.length;\n}\n\n/**\n * Returns the second highest value in a matrixed range of values.\n * @customfunction\n * @param {number[][]} values Multiple ranges of values.\n */\nfunction inputRangeParams(values) {\n  let highest = Number.MIN_SAFE_INTEGER,\n    secondHighest = Number.MIN_SAFE_INTEGER;\n  for (let i = 0; i < values.length; i++) {\n    for (let j = 0; j < values[i].length; j++) {\n      if (values[i][j] >= highest) {\n        secondHighest = highest;\n        highest = values[i][j];\n      } else if (values[i][j] >= secondHighest) {\n        secondHighest = values[i][j];\n      }\n    }\n  }\n  if (secondHighest === Number.MIN_SAFE_INTEGER) {\n    secondHighest = null; // No second highest found\n  }\n  return secondHighest;\n}\n\n/**\n * Return the address of the cell that invoked the custom function. \n * @customfunction\n * @param {number} first First parameter.\n * @param {number} second Second parameter.\n * @param {CustomFunctions.Invocation} invocation Invocation object. \n * @requiresAddress \n */\nfunction intputInvocation(first, second, invocation) {\n  const address = invocation.address;\n  return address;\n}\n\n/**\n * This function will call the write API to write \"Hello\" to A1.\n * @customfunction\n * @returns {string} \n */\nasync function callWriteApi() {\n  Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    let range = sheet.getRange(\"A1\");\n    range.values = [[\"Hello\"]];\n    await context.sync();\n  });\n\n  return \"test\";\n}\n\n/** \n * This function will call the read API to read the value from A1.\n * @customfunction\n * @returns {string} \n */\nasync function callReadApi() {\n  var result = \"Initial value\";\n  await Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    let range = sheet.getRange(\"A1\");\n    range.load(\"values\");\n    await context.sync();\n    console.log(range.values[0][0]);\n    result = range.values[0][0] || \"No value found\";\n  });\n\n  return result;\n}\n\n/**\n * This function will call the read API to read the value from A1 10 times using context.sync() 10 times.\n * @customfunction\n * @returns {string} \n */\nasync function callContextSync10Times() {\n  var result = \"Initial value\";\n  await Excel.run(async (context) => {\n    for (let i = 0; i < 10; i++) {\n      let sheet = context.workbook.worksheets.getActiveWorksheet();\n      let range = sheet.getRange(\"A1\");\n      range.load(\"values\");\n      await context.sync();\n      result = range.values[0][0] || \"No value found\";\n    }\n  });\n  return result;\n}\n\n/**\n * Wait for a specified number of seconds.\n * @customfunction\n * @param {number} seconds The number of seconds to wait.\n * @returns {string} A message indicating the wait is over.\n */\nasync function waitXSecondsPromise(seconds) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(`Waited ${seconds} seconds`);\n    }, seconds * 1000);\n  });\n}\n\n/**\n * This function will call the write API to write \"Hello\" to A1.\n * @customfunction\n * @supportSync\n * @param {CustomFunctions.Invocation} invocation Invocation object.  \n * @returns {string} \n */\nasync function syncCallWriteApi(invocation) {\n  const context = new Excel.RequestContext();\n  context.setInvocation(invocation);\n\n  let sheet = context.workbook.worksheets.getActiveWorksheet();\n  let range = sheet.getRange(\"A1\");\n  range.values = [[\"Hello\"]];\n  await context.sync();\n\n  return \"test\";\n}\n\n/** \n * This function will call the read API to read the value from A1.\n * @customfunction\n * @supportSync\n * @param {CustomFunctions.Invocation} invocation Invocation object.  \n * @returns {string} \n */\nasync function syncCallReadApi(invocation) {\n  const context = new Excel.RequestContext();\n  context.setInvocation(invocation);\n\n  var result = \"Initial value\";\n  let sheet = context.workbook.worksheets.getActiveWorksheet();\n  let range = sheet.getRange(\"A1\");\n  range.load(\"values\");\n  await context.sync();\n  console.log(range.values[0][0]);\n  result = range.values[0][0] || \"No value found\";\n\n  return result;\n}\n\nCustomFunctions.associate(\"ADD\", add);\nCustomFunctions.associate(\"CLOCK\", clock);\nCustomFunctions.associate(\"INCREMENT\", increment);\nCustomFunctions.associate(\"LOG\", logMessage);\nCustomFunctions.associate(\"RETURNINT\", returnInt);\nCustomFunctions.associate(\"RETURNINTPROMISE\", returnIntPromise);\nCustomFunctions.associate(\"RETURN42PROMISE\", return42Promise);\nCustomFunctions.associate(\"RETURNINTVOLATILE\", returnIntVolatile);\nCustomFunctions.associate(\"RETURN42VOLATILE\", return42Volatile);\nCustomFunctions.associate(\"RETURNSTRINGVOLATILE\", returnStringVolatile);\nCustomFunctions.associate(\"RETURNSTRINGSTREAM5M\", returnStringStream5m);\nCustomFunctions.associate(\"RETURNSTRINGSTREAM1S\", returnStringStream1s);\nCustomFunctions.associate(\"RETURNTESTSTRINGSTREAM1S\", returnTestStringStream1s);\nCustomFunctions.associate(\"RETURNSTRINGDYNAMICARRAY\", returnStringDynamicArray);\nCustomFunctions.associate(\"RETURNSTRINGTESTDYNAMICARRAY\", returnStringTestDynamicArray);\nCustomFunctions.associate(\"RETURNSTRINGNESTED\", returnStringNested);\nCustomFunctions.associate(\"RETURNSTRINGWAIT\", returnStringWait);\nCustomFunctions.associate(\"RETURNSTRINGWAITVOLATILE\", returnStringWaitVolatile);\nCustomFunctions.associate(\"RETURNDOUBLECELLVALUE\", returnDoubleCellValue);\nCustomFunctions.associate(\"INPUTSTRING\", inputString);\nCustomFunctions.associate(\"INPUTINTOPTIONAL\", inputIntOptional);\nCustomFunctions.associate(\"INPUTINTREPEATING\", inputIntRepeating);\nCustomFunctions.associate(\"INPUTRANGEPARAMS\", inputRangeParams);\nCustomFunctions.associate(\"INTPUTINVOCATION\", intputInvocation);\nCustomFunctions.associate(\"CALLWRITEAPI\", callWriteApi);\nCustomFunctions.associate(\"CALLREADAPI\", callReadApi);\nCustomFunctions.associate(\"CALLCONTEXTSYNC10TIMES\", callContextSync10Times);\nCustomFunctions.associate(\"WAITXSECONDSPROMISE\", waitXSecondsPromise);\nCustomFunctions.associate(\"SYNCCALLWRITEAPI\", syncCallWriteApi);\nCustomFunctions.associate(\"SYNCCALLREADAPI\", syncCallReadApi);","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["__webpack_require__","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","currentTime","Date","toLocaleTimeString","_callWriteApi","_callee2","_context2","Excel","run","_ref","_callee","context","_context","workbook","worksheets","getActiveWorksheet","getRange","values","sync","_x4","_callReadApi","_callee4","result","_context4","_ref2","_callee3","sheet","range","_context3","load","console","log","_x5","_callContextSync10Times","_callee6","_context6","_ref3","_callee5","_context5","_x6","_waitXSecondsPromise","_callee7","seconds","_context7","setTimeout","concat","_syncCallWriteApi","_callee8","invocation","_context8","RequestContext","setInvocation","_syncCallReadApi","_callee9","_context9","exports","definition","key","get","obj","prop","hasOwnProperty","CustomFunctions","associate","first","second","timer","setInterval","time","setResult","onCanceled","clearInterval","incrementBy","message","timestamp","toISOString","Math","floor","random","cell","type","basicValue","numberFormat","str","third","reduce","b","highest","Number","MIN_SAFE_INTEGER","secondHighest","j","address","_x","_x2","_x3"],"sourceRoot":""}